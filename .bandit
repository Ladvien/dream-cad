# Bandit configuration file
# https://bandit.readthedocs.io/en/latest/config.html

[bandit]
# Exclude directories from scanning
exclude_dirs = [
    '.venv',
    'venv',
    '.git',
    '.tox',
    'dist',
    'build',
    '*.egg',
    'extern',  # External submodules
    'tests',   # Test files often have assertions
    'docs',
    'outputs',
    'logs',
    'benchmarks'
]

# Skip specific tests
skips = [
    'B101',  # assert_used - Common in tests and debugging
    'B601',  # paramiko_calls - Not using paramiko
    'B603',  # subprocess_without_shell_equals_true - Sometimes needed
]

# Test IDs to run
tests = [
    'B102',  # exec_used
    'B103',  # set_bad_file_permissions
    'B104',  # hardcoded_bind_all_interfaces
    'B105',  # hardcoded_password_string
    'B106',  # hardcoded_password_funcarg
    'B107',  # hardcoded_password_default
    'B108',  # hardcoded_tmp_directory
    'B110',  # try_except_pass
    'B112',  # try_except_continue
    'B201',  # flask_debug_true
    'B301',  # pickle usage
    'B302',  # marshal usage
    'B303',  # md5 usage
    'B304',  # des usage
    'B305',  # cipher usage
    'B306',  # mktemp usage
    'B307',  # eval usage
    'B308',  # mark_safe usage
    'B309',  # httpsconnection usage
    'B310',  # urllib usage
    'B311',  # random usage
    'B312',  # telnetlib usage
    'B313',  # xml_bad_ElementTree
    'B314',  # xml_bad_etree
    'B315',  # xml_bad_expatreader
    'B316',  # xml_bad_expatbuilder
    'B317',  # xml_bad_sax
    'B318',  # xml_bad_minidom
    'B319',  # xml_bad_pulldom
    'B320',  # xml_bad_etree
    'B321',  # ftplib usage
    'B323',  # unverified_context usage
    'B324',  # hashlib usage
    'B401',  # import_telnetlib
    'B402',  # import_ftplib
    'B403',  # import_pickle
    'B404',  # import_subprocess
    'B405',  # import_xml_etree
    'B406',  # import_xml_sax
    'B407',  # import_xml_expat
    'B408',  # import_xml_minidom
    'B409',  # import_xml_pulldom
    'B410',  # import_lxml
    'B411',  # import_xmlrpclib
    'B412',  # import_httpoxy
    'B413',  # import_pycrypto
    'B501',  # request_with_no_cert_validation
    'B502',  # ssl_with_bad_version
    'B503',  # ssl_with_bad_defaults
    'B504',  # ssl_with_no_version
    'B505',  # weak_cryptographic_key
    'B506',  # yaml_load
    'B507',  # ssh_no_host_key_verification
    'B602',  # subprocess_popen_with_shell_equals_true
    'B604',  # any_other_function_with_shell_equals_true
    'B605',  # start_process_with_a_shell
    'B606',  # start_process_with_no_shell
    'B607',  # start_process_with_partial_path
    'B608',  # hardcoded_sql_expressions
    'B609',  # linux_commands_wildcard_injection
    'B610',  # django_extra_used
    'B611',  # django_rawsql_used
    'B701',  # jinja2_autoescape_false
    'B702',  # use_of_mako_templates
    'B703',  # django_mark_safe
]

# Severity levels for reporting
# LOW, MEDIUM, HIGH
severity = ['MEDIUM', 'HIGH']

# Confidence levels for reporting
# LOW, MEDIUM, HIGH
confidence = ['MEDIUM', 'HIGH']

# Output format
# Available formats: csv, custom, html, json, screen, txt, xml, yaml
output_format = 'json'

# Aggregate results by filename
aggregate = 'file'

# Maximum number of lines to show for each issue
max_lines = 5